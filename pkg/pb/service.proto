syntax = "proto3";

package service;

import "google/api/annotations.proto";
import "github.com/lyft/protoc-gen-validate/validate/validate.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "google/protobuf/timestamp.proto";

option go_package = "catalog/pkg/pb;pb";

message VersionResponse {
    string version = 1;
}

message BrandAttributeView {
    string key = 1;
    string value = 2;
}

message BrandAttributeResponseView {
    string key = 1;
    string value = 2;
    string external_id = 3;
}

message CreateBrandAttributeRequest {
    string brand_id = 1;
    BrandAttributeView payload = 2;
}

message CreateBrandAttributeResponse {
    BrandAttributeResponseView result = 1;
}

message UpdateBrandAttributeRequest {
    string brand_id = 1;
    string brand_attribute_id = 2;
    BrandAttributeView payload = 3;
}

message UpdateBrandAttributeResponse {
    BrandAttributeResponseView result = 1;
}

message DeleteBrandAttributeRequest {
    string brand_id = 1;
    string brand_attribute_id = 2;
}

message DeleteBrandAttributeResponse {

}

message GetBrandAttributeByIdRequest {
    string brand_id = 1;
    string brand_attribute_id = 2;
}

message GetBrandAttributeByIdResponse {
    BrandAttributeResponseView result = 1;
}

message MultiGetBrandAttributeRequest {
    string brand_id = 1;
    repeated string external_ids = 2;
}

message MultiGetBrandAttributeResponse {
    repeated BrandAttributeResponseView results = 1;
}

message GetBrandRequest {
    string external_id = 1;
}

message GetBrandResponse {
    BrandAttributeResponseView result = 1;
}

message CreateBrandRequest {
    BrandDetails payload = 1;
}

message GetAttributesForBrandRequest {
    string brand_id = 1;
}

message GetAttributesForBrandResponse {
    repeated BrandAttributeResponseView results = 1;
}

message BrandDetails {
    string name = 1;
    string description = 2;
    string keywords = 3;
    int32 status = 4;
}

message CreateBrandResponse {
    BrandDetails brand = 1;
    string external_id = 2;
}

message GetBrandByIdResponse {
    BrandDetails brand = 1;
    string external_id = 2;
}

message GetBrandByIdRequest {
    string external_id = 1;
}

message UpdateBrandRequest {
    BrandDetails payload = 1;
    string external_id = 2;
}

message UpdateBrandResponse {
    BrandDetails brand = 1;
    string external_id = 2;
}

message DeleteBrandRequest {
    string external_id = 1;
}

message DeleteBrandResponse {

}

message MultiGetBrandsRequest {
    repeated string external_ids = 1;
}

message MultiGetBrandsResponse {
    repeated GetBrandByIdResponse result = 1;
}

message Testimonial {
    string attribute = 1;
    string value = 2;
    string scale = 3;
    string comments = 4;
    int64 display_order = 5;
}

message Capability {
    int64 mask = 1;
}

message Doctor {
    string first_name = 1;
    string last_name = 2;
    google.protobuf.Timestamp date_of_birth = 3;
    int64 status = 4;
    repeated string email_addresses = 5;
    repeated string phone_numbers = 6;
    string thumbnail_url = 7;
    string image_url = 8;
    string pre_salutation = 9;
    string post_salutation = 10;
    string meta_keywords = 11;
    string meta_description = 12;
    int64 capability_bit_mask = 13;
    bool display = 14;
    repeated Capability capabilities = 15;
    int64 display_order = 16;
    string external_id = 17;
}

message CreateDoctorRequest {
    Doctor payload = 1;
}

message CreateDoctorResponse {
    Doctor response = 1;
}

message CreateTestimonialRequest {
    string doctor_id = 1;
    Testimonial payload = 2;
}

message CreateTestimonialResponse {
    Testimonial response = 1;
}

message GetDoctorByIdRequest {
    string external_id = 1;
}

message GetDoctorByIdResponse {
    Doctor response = 1;
}

message UpdateDoctorRequest {
    string doctor_id = 1;
    Doctor payload = 2;
}

message UpdateDoctorResponse {
    Doctor response = 1;
}

message MultiGetDoctorsRequest {
    repeated string doctor_ids = 1;
}

message MultiGetDoctorsResponse {
    repeated Doctor doctors = 1;
}

message UpdateDoctorTestimonialRequest {
    string doctor_id = 1;
    string testimonial_id = 2;
    Testimonial payload = 3;
}

message UpdateDoctorTestimonialResponse {
    Testimonial response = 1;
}

message GetDoctorTestimonialByIdRequest {
    string doctor_id = 1;
    string testimonial_id = 2;
}

message GetDoctorTestimonialByIdResponse {
    Testimonial response = 1;
}


message MultiGetDoctorTestimonialsRequest {
    string doctor_id = 1;
}

message MultiGetDoctorTestimonialsResponse {
    repeated Testimonial testimonials = 1;
}

message GetTestimonialsForDoctorsRequest {
    repeated string doctor_ids = 1;
}

message DoctorTestimonial {
    uint64 doctor_id = 1;
    repeated Testimonial testimonials = 2;
}

message GetTestimonialsForDoctorsResponse {
    repeated DoctorTestimonial doctor_testimonials = 1;
}

service BrandService {
    rpc CreateBrand (CreateBrandRequest) returns (CreateBrandResponse) {
        option (google.api.http) = {
      post: "/brands"
      body: "payload"
    };
    }

    rpc GetBrandById (GetBrandByIdRequest) returns (GetBrandByIdResponse) {
        option (google.api.http) = {
      get: "/brands/{external_id}"
    };
    }

    rpc UpdateBrand (UpdateBrandRequest) returns (UpdateBrandResponse) {
        option (google.api.http) = {
      patch: "/brands/{external_id}"
      body: "payload"
    };
    }

    rpc DeleteBrand (DeleteBrandRequest) returns (DeleteBrandResponse) {
        option (google.api.http) = {
      delete: "/brands/{external_id}"
    };
    }

    rpc MultiGetBrands (MultiGetBrandsRequest) returns (MultiGetBrandsResponse) {
        option (google.api.http) = {
      put: "/brands/multi-get"
      body: "*"
    };
    }

    rpc GetBrandAttributes (GetAttributesForBrandRequest) returns (GetAttributesForBrandResponse) {
        option (google.api.http) = {
      get: "/brands/{brand_id}/attributes"
    };
    }
}

service BrandAttributeService {
    rpc CreateBrandAttribute (CreateBrandAttributeRequest) returns (CreateBrandAttributeResponse) {
        option (google.api.http) = {
      post: "/brands/{brand_id}/attributes"
      body: "payload"
    };
    }

    rpc UpdateBrandAttribute (UpdateBrandAttributeRequest) returns (UpdateBrandAttributeResponse) {
        option (google.api.http) = {
      put: "/brands/{brand_id}/attributes/{brand_attribute_id}"
      body: "payload"
    };
    }

    rpc GetBrandAttributeById (GetBrandAttributeByIdRequest) returns (GetBrandAttributeByIdResponse) {
        option (google.api.http) = {
      get:"/brands/{brand_id}/attributes/{brand_attribute_id}"
    };
    }

    rpc DeleteBrandAttribute (DeleteBrandAttributeRequest) returns (DeleteBrandAttributeResponse) {
        option (google.api.http) = {
      delete: "/brands/{brand_id}/attributes/{brand_attribute_id}"
    };
    }

    rpc MultiGetBrandAttributes (MultiGetBrandAttributeRequest) returns (MultiGetBrandAttributeResponse) {
        option (google.api.http) = {
      put: "/brands/{brand_id}/attributes"
      body: "*"
    };
    }
}

service DoctorService {
    rpc CreateDoctor (CreateDoctorRequest) returns (CreateDoctorResponse) {
        option (google.api.http) = {
      post: "/doctors"
      body: "payload"
    };
    }

    rpc GetDoctorByExternalId (GetDoctorByIdRequest) returns (GetDoctorByIdResponse) {
        option (google.api.http) = {
      get: "/doctors/{external_id}"
    };
    }

    rpc UpdateDoctor (UpdateDoctorRequest) returns (UpdateDoctorResponse) {
        option (google.api.http) = {
      patch: "/doctors/{doctor_id}"
      body: "payload"
    };
    }

    rpc MultiGetDoctors (MultiGetDoctorsRequest) returns (MultiGetDoctorsResponse) {
        option (google.api.http) = {
    put: "/doctors/multi-get"
    body: "*"
   };
    }
}

service DoctorTestimonialService {
    rpc CreateDoctorTestimonial (CreateTestimonialRequest) returns (CreateTestimonialResponse) {
        option (google.api.http) = {
      post: "/doctors/{doctor_id}/testimonials"
      body: "payload"
    };
    }

    rpc UpdateDoctorTestimonial (UpdateDoctorTestimonialRequest) returns (UpdateDoctorTestimonialResponse) {
        option (google.api.http) = {
      patch: "/doctors/{doctor_id}/testimonials/{testimonial_id}"
      body: "payload"
    };
    }

    rpc GetDoctorTestimonialByExternalId (GetDoctorTestimonialByIdRequest) returns (GetDoctorTestimonialByIdResponse) {
        option (google.api.http) = {
      get: "/v1/doctors/{doctor_id}/testimonials/{testimonial_id}"
    };
    }

    rpc MultiGetDoctorTestimonials (MultiGetDoctorTestimonialsRequest) returns (MultiGetDoctorTestimonialsResponse) {
        option (google.api.http) = {
      get: "/v1/doctors/{doctor_id}/testimonials"
    };
    }

    rpc GetTestimonialsForDoctors (GetTestimonialsForDoctorsRequest) returns (GetTestimonialsForDoctorsResponse) {
        option (google.api.http) = {
      put: "/v1/doctor-testimonials"
      body: "*"
    };
    }
}
