syntax = "proto3";

package service;

import "google/api/annotations.proto";
import "github.com/lyft/protoc-gen-validate/validate/validate.proto";
import "protoc-gen-swagger/options/annotations.proto";

option go_package = "catalog/pkg/pb;pb";

message VersionResponse {
  string version = 1;
}

message BrandAttributeView {
  string key = 1;
  string value = 2;
}

message BrandAttributeResponseView {
  string key = 1;
  string value = 2;
  string external_id = 3;
}

message CreateBrandAttributeRequest {
  string brand_id = 1;
  BrandAttributeView payload = 2;
}

message CreateBrandAttributeResponse {
  BrandAttributeResponseView result = 1;
}

message UpdateBrandAttributeRequest {
  string brand_id = 1;
  string brand_attribute_id = 2;
  BrandAttributeView payload = 3;
}

message UpdateBrandAttributeResponse {
  BrandAttributeResponseView result = 1;
}

message DeleteBrandAttributeRequest {
  string brand_id = 1;
  string brand_attribute_id = 2;
}

message DeleteBrandAttributeResponse {

}

message GetBrandAttributeByIdRequest {
  string brand_id = 1;
  string brand_attribute_id = 2;
}

message GetBrandAttributeByIdResponse {
  BrandAttributeResponseView result = 1;
}

message MultiGetBrandAttributeRequest {
  repeated string external_ids = 1;
}

message MultiGetBrandAttributeResponse {
  repeated BrandAttributeResponseView results = 1;
}

message GetBrandRequest {
  string external_id = 1;
}

message GetBrandResponse {
 BrandAttributeResponseView result = 1;
}

message CreateBrandRequest {
  BrandDetails payload = 1;
}

message GetAttributesForBrandRequest {
  string brand_id = 1;
}

message GetAttributesForBrandResponse {
  repeated BrandAttributeResponseView results = 1;
}

message BrandDetails {
  string name = 1;
  string description = 2;
  string keywords = 3;
  int32 status = 4;
}

message CreateBrandResponse {
  BrandDetails brand = 1;
  string external_id = 2;
}

message GetBrandByIdResponse {
  BrandDetails brand = 1;
  string external_id = 2;
}

message GetBrandByIdRequest {
  string external_id = 1;
}

message UpdateBrandRequest {
  BrandDetails payload = 1;
  string external_id = 2;
}

message UpdateBrandResponse {
  BrandDetails brand = 1;
  string external_id = 2;
}

message DeleteBrandRequest {
  string external_id = 1;
}

message DeleteBrandResponse {

}

message MultiGetBrandsRequest {
  repeated string external_ids = 1;
}

message MultiGetBrandsResponse {
  repeated GetBrandByIdResponse result = 1;
}

service BrandService {
  rpc CreateBrand (CreateBrandRequest) returns (CreateBrandResponse) {
    option (google.api.http) = {
      post: "/brands"
      body: "payload"
    };
  }

  rpc GetBrandById (GetBrandByIdRequest) returns (GetBrandByIdResponse){
    option (google.api.http) = {
      get: "/brands/{external_id}"
    };
  }

  rpc UpdateBrand (UpdateBrandRequest) returns (UpdateBrandResponse){
    option (google.api.http) = {
      patch: "/brands/{external_id}"
      body: "payload"
    };
  }

  rpc DeleteBrand (DeleteBrandRequest) returns (DeleteBrandResponse){
    option (google.api.http) = {
      delete: "/brands/{external_id}"
    };
  }

  rpc MultiGetBrands (MultiGetBrandsRequest) returns (MultiGetBrandsResponse){
    option (google.api.http) = {
      put: "/brands/multi-get"
      body: "*"
    };
  }

  rpc GetBrandAttributes (GetAttributesForBrandRequest) returns (GetAttributesForBrandResponse) {
    option (google.api.http) = {
      get: "/brands/{brand_id}/brand-attributes"
    };
  }
}

service BrandAttributeService {
  rpc CreateBrandAttribute (CreateBrandAttributeRequest) returns (CreateBrandAttributeResponse) {
    option (google.api.http) = {
      post: "/brands/{brand_id}/brand-attributes"
      body: "payload"
    };
  }

  rpc UpdateBrandAttribute (UpdateBrandAttributeRequest) returns (UpdateBrandAttributeResponse) {
    option (google.api.http) = {
      put: "/brands/{brand_id}/brand-attributes/{brand_attribute_id}"
      body: "payload"
    };
  }

  rpc GetBrandAttributeById (GetBrandAttributeByIdRequest) returns (GetBrandAttributeByIdResponse) {
    option (google.api.http) = {
      get:"/brands/{brand_id}/brand-attributes/{brand_attribute_id}"
    };
  }

  rpc DeleteBrandAttribute (DeleteBrandAttributeRequest) returns (DeleteBrandAttributeResponse) {
    option (google.api.http) = {
      delete: "/brands/{brand_id}/brand-attributes/{brand_attribute_id}"
    };
  }

  rpc MultiGetBrandAttributes (MultiGetBrandAttributeRequest) returns (MultiGetBrandAttributeResponse){
    option (google.api.http) = {
      put: "/brand-attributes"
      body: "*"
    };
  }
}
